// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package generated

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"golang.org/x/text/encoding/unicode"
)

type Bstr struct {
	Len uint32
	Str string
	_io *kaitai.Stream
	_root *Bstr
	_parent interface{}
}
func NewBstr() *Bstr {
	return &Bstr{
	}
}

func (this *Bstr) Read(io *kaitai.Stream, parent interface{}, root *Bstr) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Len = uint32(tmp1)
	tmp2, err := this._io.ReadBytes(int(this.Len))
	if err != nil {
		return err
	}
	tmp2 = tmp2
	tmp3, err := kaitai.BytesToStr(tmp2, unicode.UTF16(unicode.LittleEndian, unicode.IgnoreBOM).NewDecoder())
	if err != nil {
		return err
	}
	this.Str = tmp3
	return err
}
